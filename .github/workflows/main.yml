name: Streaming list update

on: 
  push:
  schedule:
    - cron: '5 * * * *'
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    # ... (생략된 Checkout, Unittest 스텝) ...
      
    - name: Commit files and Generate Chart
      run: |
        echo "현재 Ref: ${{ github.ref }}"
        
        # 1. 파일 다운로드 및 환경 설정 (생략)
        WGET_URL="https://raw.githubusercontent.com/alexcha/test1/main/check.sh"
        echo "다운로드 시도 URL: $WGET_URL"
        wget "$WGET_URL" -O check.sh || { echo "ERROR: File download failed." >&2; exit 1; }
        
        export LANG=ko_KR.UTF-8
        sudo apt-get -y update
        sudo apt-get -y install html2text
        
        chmod +x check.sh
        ./check.sh >> result.txt
        
        # ----------------------------------------------------
        # 2. 차트 생성 로직 시작
        # ----------------------------------------------------
        
        # 데이터 파싱 및 JavaScript 배열 포맷으로 변환 (JS_DATA)
        # 🚨 수정: awk 명령의 따옴표 충돌 위험을 줄이기 위해 구조를 명확히 함
        JS_DATA=$(awk -F ' : ' '
            {
                timestamp = $1
                value = $2
                gsub(/,/, "", value)
                
                if (NR == 1) {
                    printf "{"
                } else {
                    printf ", {"
                }
                printf "x: \"%s\", y: %s}", timestamp, value
            } END {
                printf ""
            }' result.txt)

        # HTML 파일 생성 (Bash 변수 삽입 오류 방지용 마커 사용)
        cat << 'CHART_HTML_END_MARKER' > chart.html # <--- 이 줄이 64번째 줄 근처일 수 있습니다.

# ... (HTML 및 JavaScript 코드 생략) ...
# ... (Git 커밋 및 푸시 로직 생략) ...

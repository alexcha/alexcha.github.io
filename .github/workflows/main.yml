name: Streaming list update

on: 
  push:
    branches: [ main ]
  schedule:
    # 3시간에 한 번 실행 (UTC 기준 0시, 3시, 6시, 9시, 12시, 15시, 18시, 21시 0분에 실행)
    - cron: '0 0,3,6,9,12,15,18,21 * * *' 
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4 
      
    - name: Github Action gen-sh-unittest
      id: action-gen-sh-unittest
      uses: vargiuscuola/gen-sh-unittest@master
      
    - name: Get Unittest Result
      run: echo "The result of gensh-unittest Action was ${{ steps.action-gen-sh-unittest.outputs.result }}"
      
    - name: Run Script, Generate Chart, and Commit
      # 🚨 Secret GKEY를 GEMINI_API_KEY 환경 변수로 셸 스크립트에 전달
      env:
        GEMINI_API_KEY: ${{ secrets.GKEY }}
      run: |
        echo "--- 워크플로우 시작: 환경 설정 및 실행 ---"
        
        # 1. 상수 정의
        WGET_CHECK_URL="https://raw.githubusercontent.com/alexcha/test1/refs/heads/main/check.sh"
        WGET_CHART_URL="https://raw.githubusercontent.com/alexcha/test1/refs/heads/main/generate_chart.sh"
        WGET_RESULT_URL="https://raw.githubusercontent.com/alexcha/test1/refs/heads/main/result.txt"

        # 2. 필수 패키지 설치: html2text, jq, curl (AI 예측 및 파싱에 필요)
        sudo apt-get -y update
        sudo apt-get -y install html2text jq curl

        # 3. result.txt 다운로드 및 초기화
        echo "3. 기존 result.txt 다운로드 시도..."
        wget "$WGET_RESULT_URL" -O result.txt || { touch result.txt && echo "result.txt not found, starting fresh."; }
        INITIAL_SIZE=$(wc -c < result.txt)
        echo "   -> 다운로드 직후 result.txt 크기: $INITIAL_SIZE 바이트"
        
        # 4. check.sh 및 generate_chart.sh 다운로드 및 실행 권한 부여
        echo "4. 스크립트 다운로드 및 권한 부여..."
        wget "$WGET_CHECK_URL" -O check.sh || { echo "ERROR: check.sh 다운로드 실패" >&2; exit 1; }
        wget "$WGET_CHART_URL" -O generate_chart.sh || { echo "ERROR: generate_chart.sh 다운로드 실패" >&2; exit 1; }
        chmod +x check.sh generate_chart.sh
        
        # 5. check.sh 실행 및 result.txt 업데이트
        echo "5. check.sh 실행 및 result.txt에 새로운 데이터 추가"
        ./check.sh | tee -a result.txt
        
        # 6. generate_chart.sh 실행 (index.html 생성 및 AI 예측 실행)
        echo "6. generate_chart.sh 실행 및 index.html 생성..."
        ./generate_chart.sh
        
        # 7. Git 커밋 및 푸시
        echo "7. Git 커밋 및 푸시..."
        git add result.txt index.html
        
        git config --global user.email "github-actions-bot@example.com"
        git config --global user.name "GitHub Actions Bot"

        if git diff --cached --exit-code; then
          echo "No changes to commit."
        else
          echo "Committing changes..."
          git commit -m "Automated update: data and index.html (chart)"
          git branch -M main
          git push https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} main
        fi
